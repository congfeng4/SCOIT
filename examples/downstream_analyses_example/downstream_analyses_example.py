import numpy as np
from scoit.cell_analysis import knn_adj_matrix, jsnn_adj_matrix
from scoit.cell_analysis import RunLouvain, RunSpectral, RunLeiden
from scoit.gene_analysis import pearson_correlation, feature_projection

## This is an example to analyse the embeddings generated by SCOIT from CITE-seq dataset.
cell_emb = np.loadtxt("cell_embeddings.csv", delimiter=",")
gene_emb = np.loadtxt("gene_embeddings.csv", delimiter=",")
protein_emb = np.loadtxt("protein_embeddings.csv", delimiter=",")

# community detection
adj_matrix = knn_adj_matrix(cell_emb)
y_pred = RunLeiden(adj_matrix)

# gene & protein correlation
gene_list = list(np.loadtxt("gene_list.txt", dtype=str))
protein_list = list(np.loadtxt("protein_list.txt", dtype=str))
target_gene = "HUMAN_CD3D"
target_gene_embedding = gene_emb[gene_list.index(target_gene)]
target_protein = "CD3"
target_protein_embedding = protein_emb[protein_list.index(target_protein)]
pearson_ = pearson_correlation(target_gene_embedding, target_protein_embedding)
print("Pearson correlation between gene %s and protein %s is %s."%(target_gene, target_protein, pearson_))

target_gene = "HUMAN_CD3D"
target_gene_embedding = gene_emb[gene_list.index(target_gene)]
target_protein = "CD4"
target_protein_embedding = protein_emb[protein_list.index(target_protein)]
pearson_ = pearson_correlation(target_gene_embedding, target_protein_embedding)
print("Pearson correlation between gene %s and protein %s is %s."%(target_gene, target_protein, pearson_))

# gene projection
target_protein = "CD3"
target_protein_embedding = protein_emb[protein_list.index(target_protein)]
feature_projection(target_gene_embedding, cell_emb, figure_name="%s_distribution.png"%target_protein)
target_protein = "CD4"
target_protein_embedding = protein_emb[protein_list.index(target_protein)]
feature_projection(target_gene_embedding, cell_emb, figure_name="%s_distribution.png"%target_protein)
